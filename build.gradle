subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    group = 'org.objectweb.proactive'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        compile 'log4j:log4j:1.2.14'
        testCompile 'junit:junit:4.11'
    }

}

project(':programming-core') {
    dependencies {
        compile(
                'org.mortbay.jetty:jetty:6.1.18',
                'org.tmatesoft.svnkit:trilead-ssh2:build213-svnkit-1.3-patch',
                'commons-cli:commons-cli:1.1',
                'javassist:javassist:3.11.0.GA',
                'xerces:xercesImpl:2.8.1',

                project(':programming-annotation')
        )
    }
}

project('programming-extensions') {
    subprojects {
        dependencies {
            compile(
                    project(':programming-core'),
                    project(':programming-annotation')
            )
        }
    }
}

project('programming-extensions:programming-extension-amqp') {
    dependencies {
        compile(
                'com.rabbitmq:amqp-client:3.0.2',
        )
    }
}


project('programming-extensions:programming-extension-annotation') {
    dependencies {
        compile files("${System.properties['java.home']}/../lib/tools.jar")
    }
}


project('programming-extensions:programming-extension-vfsprovider') {
    dependencies {
        compile(
                'commons-logging:commons-logging:1.1.1',
                'org.apache.commons:commons-vfs2:2.0',
                'commons-net:commons-net:2.2',
                'com.jcraft:jsch:0.1.42',

                project(':programming-extensions:programming-extension-annotation')
        )
        testCompile 'org.apache.commons:commons-vfs2:2.0:tests'
    }
    test {
        systemProperties << ['proactive.classloading.useHTTP': false]
    }
}

project('programming-extensions:programming-extension-dataspaces') {
    dependencies {
        compile(
                'org.apache.commons:commons-vfs2:2.0',
                'commons-net:commons-net:2.2',
                'com.jcraft:jsch:0.1.42',

                project(':programming-extensions:programming-extension-vfsprovider')
        )
    }
    test {
        systemProperties << ['proactive.classloading.useHTTP': false]
    }
}

project('programming-extensions:programming-extension-gcmdeployment') {
    dependencies {
        compile(
                project(':programming-extensions:programming-extension-dataspaces')
        )
    }
}

project('programming-extensions:programming-extension-gcmdeployment') {
    dependencies {
        compile(
                'commons-cli:commons-cli:1.1'
        )
    }
}

project('programming-extensions:programming-extension-pnp') {
    dependencies {
        compile(
                'org.jboss.netty:netty:3.2.2.Final'
        )
    }
}

project('programming-extensions:programming-extension-pnpssl') {
    dependencies {
        compile(
                'bouncycastle:bcprov-jdk15:136',
                'org.jboss.netty:netty:3.2.2.Final',

                project(':programming-extensions:programming-extension-pnp')
        )
    }
}

project('programming-extensions:programming-extension-processbuilder') {
    dependencies {
        compile(
                'net.java.dev.jna:jna:3.4.0',
                'net.java.dev.jna:platform:3.4.0'
        )
    }
}

project(':programming-test') {
    dependencies {
        testCompile(
                'commons-io:commons-io:2.4',
                'org.apache.commons:commons-vfs2:2.0',

                project(':programming-annotation'),
                project(':programming-core'),
                project(':programming-extensions').subprojects
        )
    }

    sourceSets {
        test {
            java {
                srcDir 'src'
                exclude '**/functionalTests/annotations/*/inputs/**'
            }
        }
    }

    test {
        forkEvery 1

        testLogging {
            exceptionFormat = 'full'
        }

        systemProperties << ['proactive.home': projectDir.absolutePath]
        systemProperties << ['proactive.runtime.ping': false]
        systemProperties << ['java.security.policy': file('src/test/resources/proactive.java.policy').absolutePath]

        // for TestHeartbeat
        systemProperties << ['-Djdwp.port': 5550]
        jvmArgs '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5550'
    }

    task copyToLib(type: Copy) {
        from configurations.testCompile
        into "$buildDir/dist/lib"
    }

    test.dependsOn copyToLib
}