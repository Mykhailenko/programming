#! /bin/sh

source $(dirname $0)/g5k_lib.sh

function print_help {
	echo -e "Usage: $0 [-f] [-k] [-a|-o|-s cluster]"
	echo -e "Delete OAR Jobs, kill JVMs & RMI registries and remove OAR logfiles\n"
	echo -e "\t-f     , Erase OAR log files"
	echo -e "\t-r     , Delete OAR reservations"
	echo -e "\t-k     , Kill JVMs & RMI registries on all cluster's nodes"
	echo -e "\t-c     , Kill JVMs & RMI registries on all reserved nodes"
	modopt_print_help
	exit 0
}

ARGS="ckfhr"
OPT_F=NO
OPT_K=NO
OPT_C=NO
OPT_R=NO

modopt_parse $ARGS $*
while getopts "${MODOPT_OPTS}${ARGS}" Option
do
	case $Option in
	k) OPT_K=YES ;;
	c) OPT_C=YES ;;
	f) OPT_F=YES ;;
	r) OPT_R=YES ;;
	h) print_help ;;
	*)
		modopt_error_handle $Option
		if [ "$?" -eq 0 ] ; then
			echo -e "Invalid option: $Option"
			print_help
			exit 1
		fi
	;;
	esac
done
		
echo -e "\n-> Cleaning JVMs & registries on `$CMD_HOSTNAME`"
killall -q java
killall -q rmiregistry
	

for i in `seq 0 $((${#OPTIONS_CLUSTERS[@]}-1))` ; 
do
	CLUSTER=${OPTIONS_CLUSTERS[$i]}

	if [ "$OPT_F" == "YES" ] ;
	then
		for id in $(get_oarjobs $CLUSTER) ; do
			echo -e "\n-> Removing logfiles for job $id@$CLUSTER"
   			clean_oarlogfiles $id $CLUSTER
		done
	fi	

	echo -e "\n-> Removing OAR Jobs on $CLUSTER"
	clean_oarjobs $CLUSTER
	if [ "$OPT_R" = "YES" ] ; then
		clean_oarreservations $CLUSTER
	fi

	if [ "$OPT_K" == "YES" ] ;
	then
		echo -e "\n-> Killing JVMs & rmiregistries on each nodes of $CLUSTER"
 	 	$SSH_CMD $(get_oar_hostname $CLUSTER) \
 			'for i in $(oarnodes | egrep "^\w") ; do echo -e "$i" ; ssh  -o NumberOfPasswordPrompts=0 $i pkill -9 java   ;done' 
	fi

	if [ "$OPT_C" == "YES" ] ;
	then	
		for i in $(g5k_reservedNodes -s $CLUSTER) ; do
			echo "[i] Clean -> $i"
			${SSH_CMD} $i killall -9 java rmid 2> /dev/null
		done
	fi
done
