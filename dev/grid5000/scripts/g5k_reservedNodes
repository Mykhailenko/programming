#! /bin/sh

source $(dirname $0)/g5k_lib.sh

function print_help {
	echo -e "Usage: $0 [-c] [-n num] [-a|-o|-s cluster] "
	echo -e "Print nodes owned by a reservation\n"
	echo -e "\t-c       , check that each node is really free (slow)"
	echo -e "\t-n num   , print only num nodes instead of all reserved nodes"
	modopt_print_help
	exit 1
}

function check_node_is_ok {
	USED_MEM=$(free | head -n 3 | tail -n 1 | awk '{print $3}')
	if [ "$?" -ne 0 ] || [ $USED_MEM -gt 100000 ] ; then
		if [ "$VERBOSE" == "Yes" ] ; then 
			echo "Excluding $node, USED_MEM=$USED_MEM" 1>&2
		fi 	
		exit 0
	fi

	LOAD=$(cat /proc/loadavg | cut -d'.' -f1 )
	if [ $LOAD -ge 1 ] ; then
		if [ "$VERBOSE" == "Yes" ] ; then 
			echo "Excluding $node, LOAD=$LOAD" 1>&2
		fi 	
		exit 0
	fi

	PS=$(ps  aux| awk '{print $1 "\n"}' | grep -v USER|  grep -v $USER | sort | uniq)
	for user in $PS ; do
		user_home=$(eval echo ~$user) # Erk !
		if [ "$(expr "$user_home" : '\(/home/\).*/.*')" == "/home/" ] ; then
			if [ "$VERBOSE" == "Yes" ] ; then 
				echo "Excluding $node, $user is running processes on this node" 1>&2
			fi 	
			exit 0
	  	fi			
	done

	echo USEME
	exit 0
} 

ARGS="lcn:"
OPT_C=NO
OPT_N=NO
modopt_parse $ARGS "$@"
while getopts "${MODOPT_OPTS}${ARGS}" Option
do
	case $Option in
	c) OPT_C=YES  ;;
	n) OPT_N=$OPTARG ;;
	h) print_help ;;
	l) check_node_is_ok ;; # This option is _PRIVATE_
	*)
		modopt_error_handle $Option
		if [ "$?" -eq 0 ] ; then
			echo -e "Invalid option: $Option"
			print_help
		exit 1
		fi
	;;
	esac
done
	
OUTPUT=""
for i in `seq 0 $((${#OPTIONS_CLUSTERS[@]}-1))` ; 
do
	CLUSTER=${OPTIONS_CLUSTERS[$i]}
	NODES=$(cd $(dirname $0) && $SSH_CMD $(get_oar_hostname $CLUSTER) $PWD/g5klocal_reservedNodes)

	if [ -n "$NODES" ] ;
	then
		if [ "$OPT_C" == "YES" ] ;
	 	then
			tmpfile=`mktemp -t nodeslist.XXXXXXXXXX`
			mussh -t 20 -m0 -P -c "g5k_reservedNodes -l" -h "$NODES" > $tmpfile
			OUTPUT="$OUTPUT `cat $tmpfile | while read MUSSH_LINE ; do expr "$MUSSH_LINE" : "\(.*\): USEME$"; done`"
			rm $tmpfile
		else
			OUTPUT="$OUTPUT $NODES"
		fi
	fi
done

if [ "$OPT_N" = "NO" ] ;
then
	# Print all available nodes
	echo $OUTPUT
else
	OUTPUT=$(echo $OUTPUT | cut -d" " -f 0-$OPT_N)
	COUNT=$(echo $OUTPUT | wc -w)

	echo $OUTPUT
	if [ $COUNT -lt $OPT_N ] ; then
		echo -e "\n"
		echo -e "********************************************************************" 1>&2	
		echo -e "* WARNING: You requested $OPT_N nodes but only $COUNT are available ! *" 1>&2	
		echo -e "********************************************************************" 1>&2	
	fi
fi
